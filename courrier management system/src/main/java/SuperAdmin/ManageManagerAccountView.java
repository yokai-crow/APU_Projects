/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SuperAdmin;

import Manager.AddCancelOrderTab;
import Login.Panel.CreateNew;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author G0kul
 */
public class ManageManagerAccountView extends javax.swing.JFrame {

    /**
     * Creates new form ManageManagerAccountView
     */
    public ManageManagerAccountView() {
        initComponents();
    }
    String login;
    public String setId(String id){login = id; return login;}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BackBTN = new javax.swing.JButton();
        ManagerSearchTF = new javax.swing.JTextField();
        SearchBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ManagerDetailsTab = new javax.swing.JTable();
        RefreshManagerTable = new javax.swing.JButton();
        DeleteManagerBTN = new javax.swing.JButton();
        AddManagerBTN = new javax.swing.JButton();
        EditManagerBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Manager Accounts");

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Poppins", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Manager Account");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(225, 225, 225))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        BackBTN.setBackground(new java.awt.Color(255, 0, 0));
        BackBTN.setFont(new java.awt.Font("Poppins", 3, 14)); // NOI18N
        BackBTN.setForeground(new java.awt.Color(255, 255, 255));
        BackBTN.setText("Back");
        BackBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBTNActionPerformed(evt);
            }
        });

        SearchBTN.setBackground(new java.awt.Color(0, 0, 255));
        SearchBTN.setFont(new java.awt.Font("Poppins", 3, 14)); // NOI18N
        SearchBTN.setForeground(new java.awt.Color(255, 255, 255));
        SearchBTN.setText("Search");
        SearchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBTNActionPerformed(evt);
            }
        });

        ManagerDetailsTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "password", "Position", "First Name", "Last Name", "Gender", "Contact", "Address", "Email", "Birth Year", "Birth Month", "Birth Day"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ManagerDetailsTab);

        RefreshManagerTable.setBackground(new java.awt.Color(0, 0, 255));
        RefreshManagerTable.setFont(new java.awt.Font("Poppins", 3, 14)); // NOI18N
        RefreshManagerTable.setForeground(new java.awt.Color(255, 255, 255));
        RefreshManagerTable.setText("Refresh");
        RefreshManagerTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshManagerTableActionPerformed(evt);
            }
        });

        DeleteManagerBTN.setText("Delete Manager");
        DeleteManagerBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteManagerBTNActionPerformed(evt);
            }
        });

        AddManagerBTN.setText("Add Manager");
        AddManagerBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddManagerBTNActionPerformed(evt);
            }
        });

        EditManagerBTN.setText("Edit Manager");
        EditManagerBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditManagerBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(AddManagerBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RefreshManagerTable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(DeleteManagerBTN)
                        .addGap(18, 18, 18)
                        .addComponent(EditManagerBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BackBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ManagerSearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SearchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1076, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BackBTN)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SearchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ManagerSearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(EditManagerBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddManagerBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RefreshManagerTable, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteManagerBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBTNActionPerformed
       
        this.dispose();
        SuperAdminDashboard sa = new SuperAdminDashboard();
        sa.setId(login);
        sa.setVisible(true);//set pages
    }//GEN-LAST:event_BackBTNActionPerformed

    private void AddManagerBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddManagerBTNActionPerformed
       //use code from login package 
        this.dispose();
        CreateNew fromLoginPackage = new CreateNew();
        fromLoginPackage.setId(login);
        fromLoginPackage.setVisible(true);//set pages
    }//GEN-LAST:event_AddManagerBTNActionPerformed

    private void EditManagerBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditManagerBTNActionPerformed
        // TODO add your handling code here:
        this.dispose();
        EditManagerTab emt = new EditManagerTab(); 
        emt.setId(login);
        emt.setVisible(true);//set pages
    }//GEN-LAST:event_EditManagerBTNActionPerformed

    String tableNull = "True";
    private void RefreshManagerTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshManagerTableActionPerformed
        if(tableNull.equals("True")){
            this.tableNull = "false";
            String filepath = "C:\\Users\\G0kul\\Desktop\\oodj\\OODJ\\src\\main\\java\\Login\\Panel\\employeeDTL.txt";
            File file = new File(filepath);
            try{
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                DefaultTableModel model = (DefaultTableModel)ManagerDetailsTab.getModel();
                Object[] lines = br.lines().toArray();
                model.setRowCount(0);
                for(int i = 0; i< lines.length; i++){
                        
                        String[] row = lines[i].toString().split(" ");
                    if(row[2].equals("manager")){
                        model.addRow(row);
                    }
                }
                fr.close();
                br.close();
            }catch(FileNotFoundException e){} catch (IOException ex) {       
                Logger.getLogger(AddCancelOrderTab.class.getName()).log(Level.SEVERE, null, ex);
            }       
        }
    }//GEN-LAST:event_RefreshManagerTableActionPerformed

    private void DeleteManagerBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteManagerBTNActionPerformed
        // TODO add your handling code here:
        String file = "C:\\Users\\G0kul\\Desktop\\oodj\\OODJ\\src\\main\\java\\Login\\Panel\\employeeDTL.txt";
        String tempFile = "C:\\Users\\G0kul\\Desktop\\oodj\\OODJ\\src\\main\\java\\Login\\Panel\\tempEmployeeDTL.txt";
        int idPosition = 0;
        int position = ManagerDetailsTab.getSelectedRow();
        String remove = ManagerDetailsTab.getValueAt(position, 0).toString();        
       
        
        File oldFile = new File(file);
        File newFile = new File(tempFile);
        String Line;
        String data[];
        try{
            FileWriter fw = new FileWriter(tempFile,true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            
            
            System.out.println(position);
            System.out.println(remove);
            while((Line = br.readLine()) != null){
                data = Line.split(" ");
                if(!(data[idPosition].equalsIgnoreCase(remove))){
                    pw.println(Line);
                }
            }
            pw.flush();
            pw.close();
            fr.close();
            br.close();
            bw.close();
            fw.close();
            
            oldFile.delete();
            File newname = new File(file);
            newFile.renameTo(newname);
            this.dispose();
            SuperAdminDashboard sa = new SuperAdminDashboard();
            sa.setId(login);
            sa.setVisible(true);
            
            /*this.dispose();
            OrderCancelSuccessMessage oc = new OrderCancelSuccessMessage();
            oc.setId(login);
            oc.setVisible(true);*/
        }catch(IOException e){System.out.println(e);}
    }//GEN-LAST:event_DeleteManagerBTNActionPerformed

    private void SearchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBTNActionPerformed
        tableNull = "True";
        String filepath = "C:\\Users\\G0kul\\Desktop\\oodj\\OODJ\\src\\main\\java\\Login\\Panel\\employeeDTL.txt";
            File file = new File(filepath);
            try{
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                
                String Search = ManagerSearchTF.getText();
                
                DefaultTableModel model = (DefaultTableModel)ManagerDetailsTab.getModel();
                Object[] lines = br.lines().toArray();
                model.setRowCount(0);
                for(int i = 0; i< lines.length; i++){
                    
                    String[] row = lines[i].toString().split(" ");
                    
                    //search on the basis of item id
                    if(row[0].equals(Search) && row[2].equals("manager")){
                        model.setRowCount(0);
                        model.addRow(row);
                    }
                                      
                    //Search on the basis of receiver, sender, address, item name
                    if(row[3].equals(Search) || row[4].equals(Search) || row[5].equals(Search) || row[7].equals(Search)|| row[6].equals(Search) ){
                        if(row[2].equals("manager")){
                            model.addRow(row);
                        }
                    }
                    
                    
                }
            }catch(FileNotFoundException e){} 
    }//GEN-LAST:event_SearchBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageManagerAccountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageManagerAccountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageManagerAccountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageManagerAccountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageManagerAccountView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddManagerBTN;
    private javax.swing.JButton BackBTN;
    private javax.swing.JButton DeleteManagerBTN;
    private javax.swing.JButton EditManagerBTN;
    private javax.swing.JTable ManagerDetailsTab;
    private javax.swing.JTextField ManagerSearchTF;
    private javax.swing.JButton RefreshManagerTable;
    private javax.swing.JButton SearchBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
